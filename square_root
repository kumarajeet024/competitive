//square_root using binary search:: o(log n)

#include <iostream>
using namespace std;
float square_root(int n,int p){
	int s=0,e=n;
	float ans;
	int mid;
	while(s<=e){
		mid=(s+e)/2;
		if(mid*mid==n){
			ans=mid;
			break;
		}
		if(mid*mid<n){
			s=mid+1;
			ans=mid;
		}
		else {
		e=mid-1;	
		}
	}
		float inc=0.1;
		for(int i=0;i<p;i++){
			while(ans*ans<=n){
				ans+=inc;
			}
			ans=ans-inc;
			inc=inc/10;
		}
	
	return ans;
}
int main() {
	cout<<square_root(49,3)<<endl;
	cout<<square_root(10,3)<<endl;
	return 0;
}
